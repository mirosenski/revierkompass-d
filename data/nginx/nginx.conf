events {
    worker_connections 1024;
}

http {
    upstream osrm_backend {
        server osrm:5000;
    }
    
    upstream nominatim_backend {
        server nominatim:8080;
    }
    
    upstream tileserver_backend {
        server tileserver:80;
    }
    
    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=tiles:10m rate=100r/s;
    
    server {
        listen 80;
        server_name localhost;
        
        # OSRM Routing API
        location /route/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://osrm_backend/route/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS Headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        }
        
        # OSRM Status
        location /status {
            proxy_pass http://osrm_backend/status;
            proxy_set_header Host $host;
        }
        
        # Nominatim Geocoding API
        location /geocoding/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://nominatim_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS Headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        }
        
        # TileServer GL
        location /tiles/ {
            limit_req zone=tiles burst=50 nodelay;
            proxy_pass http://tileserver_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cache Tiles
            expires 1d;
            add_header Cache-Control "public, immutable";
        }
        
        # Health Check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Offline Status
        location /offline-status {
            access_log off;
            return 200 '{"online": true, "services": {"tileserver": true, "routing": true, "geocoding": true}}';
            add_header Content-Type application/json;
            add_header 'Access-Control-Allow-Origin' '*';
        }
    }
}
